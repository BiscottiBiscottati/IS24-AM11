@startuml UtilsUML

skinparam BackgroundColor ghostwhite

package cards.utils{
    interface FieldCard <<sealed>>


}

FieldCard <|.. PlayableCard
FieldCard <|.. StarterCard

package cards.utils{
    interface CornerContainer << sealed >> {
      + isAvailable(): boolean
    }

    interface Item << sealed >>

    enum Corner << enumeration >> {
      + DOWN_RX:
      + TOP_RX:
      + DOWN_LX:
      + TOP_LX:
    }

    enum Availability << enumeration >> implements CornerContainer{
      + USABLE
      + NOT_USABLE
    }
    enum Color << enumeration >> implements CornerContainer, Item{
      + RED:
      + PURPLE:
      + BLUE:
      + GREEN:
    }
    enum Symbol << enumeration >> implements CornerContainer, Item{
      + PAPER:
      + GLASS:
      + FEATHER:
    }
    enum ObjectiveCardType << enumeration >> {
      + ObjectiveCardType():
      + L_SHAPE:
      + TRIPLET:
      + OBJECT_COLLECT:
      + COLOR_COLLECT:
      + values(): ObjectiveCardType[]
      + valueOf(String): ObjectiveCardType
    }
    enum PlayableCardType << enumeration >> {
      + PlayableCardType():
      + GOLD:
      + RESOURCE:
      + STARTER:
      + valueOf(String): PlayableCardType
      + values(): PlayableCardType[]
    }
    enum PointsRequirementsType << enumeration >> {
      + PointsRequirementsType():
      + CLASSIC:
      + COVERING_CORNERS:
      + SYMBOLS:
      + values(): PointsRequirementsType[]
      + valueOf(String): PointsRequirementsType
    }
}

@enduml